<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CS2 Demo Command Generator</title>
    <!-- Using Tailwind CSS for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body { background: linear-gradient(to right, #1e3a8a, #3b82f6); }
    </style>
</head>
<body class="font-sans antialiased text-gray-100 flex items-center justify-center min-h-screen p-4">

    <div class="bg-gray-800 bg-opacity-50 backdrop-blur-md rounded-2xl shadow-2xl p-8 max-w-lg w-full mx-4">
        
        <div class="text-center mb-8">
            <h1 class="text-3xl font-bold text-white mb-2">CS2 Demo Command Generator</h1>
            <p class="text-blue-200">A tool for users of <a href="https://cswatch.in/" target="_blank" rel="noopener noreferrer" class="underline hover:text-white">CSWatch.in</a> to get demo download commands.</p>
        </div>

        <div class="mb-8 text-left bg-gray-900 bg-opacity-50 p-4 rounded-lg">
            <h2 class="font-bold text-white mb-2">How to get your Share Code:</h2>
            <ol class="list-decimal list-inside text-sm text-blue-200 space-y-1">
                <li>Find your match in CS2, on Steam, or on a site like CSstats.gg.</li>
                <li>Get the Share Code (it looks like `CSGO-xxxxx...`).</li>
                <li>Paste the code or link below to generate the console command.</li>
            </ol>
        </div>

        <form id="shareCodeForm">
            <div class="mb-4">
                <input 
                    type="text" 
                    id="shareCodeInput"
                    placeholder="Paste your Share Code or Link here..."
                    class="w-full px-4 py-3 bg-gray-700 text-white border-2 border-transparent rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-300"
                    required
                >
            </div>
            <button 
                type="submit" 
                id="submitButton"
                class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-lg transition duration-300 transform hover:scale-105"
            >Generate Command</button>
        </form>

        <div id="result" class="mt-8 p-6 bg-gray-900 rounded-lg text-center min-h-[80px] flex items-center justify-center transition-all duration-300">
            <p class="text-gray-400">Your command will appear here...</p>
        </div>

        <div class="text-center mt-8 text-blue-200 text-sm space-y-2">
            <p>Created by <a href="https://steamcommunity.com/id/norton99/" target="_blank" rel="noopener noreferrer" class="font-bold underline hover:text-white">norton99</a></p>
            <p>Special thanks to <a href="https://github.com/m0onmo0n" target="_blank" rel="noopener noreferrer" class="font-bold underline hover:text-white">Moon Moon</a> for server hosting.</p>
            <div class="flex items-center justify-center space-x-4">
                <div class="flex items-center space-x-2">
                    <span>Main API:</span>
                    <span id="apiStatusMain" class="h-3 w-3 rounded-full bg-yellow-500" title="Checking..."></span>
                </div>
                <div class="flex items-center space-x-2">
                    <span>Backup API:</span>
                    <span id="apiStatusBackup" class="h-3 w-3 rounded-full bg-yellow-500" title="Checking..."></span>
                </div>
            </div>
            <div>
                <span>Total commands generated: <span id="parseCounter" class="font-bold">...</span></span>
            </div>
        </div>
    </div>

    <script>
        const form = document.getElementById('shareCodeForm');
        const input = document.getElementById('shareCodeInput');
        const resultDiv = document.getElementById('result');
        const counterSpan = document.getElementById('parseCounter');
        const apiStatusMain = document.getElementById('apiStatusMain');
        const apiStatusBackup = document.getElementById('apiStatusBackup');
        
        const apiEndpoints = [
            { name: 'Primary (Moon Moon)', url: 'https://csreplay.moon-moon.tech' },
            { name: 'Secondary (Cloudflare)', url: 'https://improve-pig-banner-prove.trycloudflare.com' }
        ];

        async function checkApiStatus() {
            const statuses = [apiStatusMain, apiStatusBackup];
            apiEndpoints.forEach(async (endpoint, index) => {
                const statusSpan = statuses[index];
                try {
                    const response = await fetch(`${endpoint.url}/count`, { signal: AbortSignal.timeout(5000) });
                    statusSpan.className = `h-3 w-3 rounded-full ${response.ok ? 'bg-green-500' : 'bg-red-500'}`;
                    statusSpan.title = response.ok ? 'Online' : 'Offline';
                } catch (error) {
                    statusSpan.className = 'h-3 w-3 rounded-full bg-red-500';
                    statusSpan.title = 'Offline';
                }
            });
        }

        async function getInitialCount() {
            let totalCount = 0;
            const promises = apiEndpoints.map(endpoint => 
                fetch(`${endpoint.url}/count`).then(res => res.json()).catch(() => ({count: 0}))
            );
            const results = await Promise.allSettled(promises);
            results.forEach(result => {
                if (result.status === 'fulfilled' && result.value.count) {
                    totalCount += result.value.count;
                }
            });
            counterSpan.textContent = totalCount > 0 ? totalCount : 'N/A';
        }

        async function incrementCount() {
             try {
                // We only need to increment on one server, the primary one.
                const response = await fetch(`${apiEndpoints[0].url}/increment`, { method: 'POST' });
                if(response.ok) {
                    const data = await response.json();
                    getInitialCount(); // Refresh the total count
                }
            } catch (error) {
                console.error("Failed to increment count:", error);
            }
        }

        form.addEventListener('submit', (event) => {
            event.preventDefault();
            let userInput = input.value.trim();

            // Check for a csstats.gg link
            if (userInput.includes('csstats.gg/match/')) {
                const handlerUrl = `/redirect-handler.html?url=${encodeURIComponent(userInput)}`;
                window.open(handlerUrl, '_blank');
                resultDiv.innerHTML = `
                    <p class="text-yellow-300">Please complete the verification in the new tab to get your Share Code.</p>
                `;
                return;
            }

            // Check for a regular share code
            const match = userInput.match(/(CSGO-[a-zA-Z0-9]{5}-[a-zA-Z0-9]{5}-[a-zA-Z0-9]{5}-[a-zA-Z0-9]{5}-[a-zA-Z0-9]{5})/);
            
            if (match && match[0]) {
                const shareCode = match[0];
                const command = `csgo_download_match ${shareCode}`;
                displayCommand(command);
                incrementCount();
            } else {
                displayError('Could not find a valid Share Code in the text you provided.');
            }
        });

        function displayCommand(command) {
            resultDiv.innerHTML = `
                <div class="flex flex-col items-center space-y-4 text-center">
                    <p class="font-bold text-white">Your command is ready!</p>
                    <p class="text-sm text-yellow-300 bg-yellow-900 bg-opacity-50 px-3 py-2 rounded-md">
                        Copy the command below and paste it into the CS2 console.
                    </p>
                    <p class="text-blue-400 font-mono bg-gray-800 p-2 rounded">${command}</p>
                    <button id="copyButton" class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg text-sm transition duration-300">
                        Copy Command
                    </button>
                </div>
            `;
            document.getElementById('copyButton').addEventListener('click', () => {
                const textArea = document.createElement('textarea');
                textArea.value = command;
                document.body.appendChild(textArea);
                textArea.select();
                try {
                    document.execCommand('copy');
                    const copyButton = document.getElementById('copyButton');
                    copyButton.textContent = 'Copied!';
                    setTimeout(() => { copyButton.textContent = 'Copy Command'; }, 2000);
                } catch (err) {
                    console.error('Failed to copy text: ', err);
                }
                document.body.removeChild(textArea);
            });
        }

        function displayError(message) {
            resultDiv.innerHTML = `<p class="text-red-400 font-semibold">${message}</p>`;
        }

        document.addEventListener('DOMContentLoaded', () => {
            checkApiStatus();
            getInitialCount();
            setInterval(checkApiStatus, 30000);
        });
    </script>
</body>
</html>
